group = "ru.mk.pump"
version = "1.0"
ext {
    versions = [
            aspectj      : "1.8.10",
            allure_gradle: "2.5",
            annotations  : "15.0",
            lombok       : "latest.release",
            apache       : "latest.release",
            guava        : "latest.release",
            reflections  : "latest.release",
            logger       : "latest.release",
            junit        : "4.12",
            jackson      : "2.9.0.pr4",
            selenium     : "3.7.0",
            allure       : "latest.release",
            assertj      : "3.8.0",
            allureJunit4 : "latest.release",
            junit5       : "latest.release",
            mockito      : "2.+",
            trove        : "3.+",
            joda_time    : "latest.release"
    ]
}

task info {
    doLast {
        println "Фреймворк автоматизации тестирования web на основе Selenium WebDriver"
    }
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:+'
        classpath 'io.qameta.allure:allure-gradle:2.4'
    }
}

task clean(group: "build") {
    doLast {
        println "start clean : $project.name"
        delete buildDir
        println "dir clean finish : $buildDir"

        delete "${rootDir}/out"
        println "dir clean finish : ${rootDir}/out"

        delete "${rootDir}/target"
        println "dir clean finish : ${rootDir}/target"

        delete "${rootDir}/allure-results"
        println "dir clean finish : ${rootDir}/allure-results"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.junit.platform.gradle.plugin'
    apply plugin: 'io.qameta.allure'

    version = rootProject.version
    compileJava.options.encoding = "UTF-8"

    /*sub projects full clean*/
    clean.doFirst {
        println "start clean : $project.name"

        delete "${project.projectDir}/out"
        println "dir clean finish : ${project.projectDir}/out"

        delete "${project.projectDir}/target"
        println "dir clean finish : ${project.projectDir}/target"

        delete "${project.projectDir}/allure-results"
        println "dir clean finish : ${project.projectDir}/allure-results"
    }

    junitPlatform {
        details 'tree'
    }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        compile(
                "joda-time:joda-time:$versions.joda_time",
                "org.aspectj:aspectjweaver:1.8.13",
                "org.jetbrains:annotations:$versions.annotations",
                "org.projectlombok:lombok:$versions.lombok",
                "org.apache.httpcomponents:httpclient:$versions.apache",
                "org.reflections:reflections:$versions.reflections",
                "commons-collections:commons-collections:$versions.apache",
                "com.google.guava:guava:$versions.guava",
                "org.apache.commons:commons-lang3:$versions.apache",
                "commons-io:commons-io:$versions.apache",
                "org.apache.commons:commons-text:$versions.apache",
                "ch.qos.logback:logback-classic:$versions.logger",
                "ch.qos.logback:logback-core:$versions.logger",
                "org.seleniumhq.selenium:selenium-java:$versions.selenium",
                "io.qameta.allure:allure-java-commons:$versions.allure",
                "net.sf.trove4j:trove4j:$versions.trove",
                "io.qameta.allure:allure-gradle:$versions.allure_gradle"
        )

        testCompileOnly('org.apiguardian:apiguardian-api:+')

        testRuntime("org.junit.jupiter:junit-jupiter-engine:$versions.junit5")

        testCompile(
                "org.junit.jupiter:junit-jupiter-api:$versions.junit5",
                "org.assertj:assertj-core:$versions.assertj",
                "org.mockito:mockito-core:$versions.mockito",
                "io.qameta.allure:allure-junit5:latest.release",
                "io.qameta.allure:allure-gradle:$versions.allure_gradle"
        )
    }
}